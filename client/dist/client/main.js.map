{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/_services/account.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<p>register works!</p>\n","import { Observable, ReplaySubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {map} from 'rxjs/operators'\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = 'https://localhost:5001/api/';\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n  constructor(private http: HttpClient) { }\n\n  login(model: any): Observable<any> {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User)=> {\n        const user = response;\n        if(user){\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUserSource.next(user);\n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: User){\n    this.currentUserSource.next(user);\n  }\n\n  logout(){\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n  }\n\n\n}\n","<div class=\"container mt-5\">\n    <div style=\"text-align: center;\" *ngIf=\"!registerMode\">\n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on in to view your match.... all you need to do is sign up! </p>\n        <div class=\"text-center\">\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\n            <button class=\"btn btn-info btn-lg mr-2\">Learn more</button>\n        </div>\n    </div>\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n                <p>Register Form goes here\n                </p>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  registerMode: boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle(){\n    this.registerMode = !this.registerMode;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AccountService } from './_services/account.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating App';\n  users: Observable<any>;\n  constructor(private http: HttpClient, private accountService: AccountService ){}\n\n\n  ngOnInit() {\n    this.getUsers();\n    this.setCurrentUser();\n  }\n\n  getUsers(){\n    this.users = this.http.get('https://localhost:5001/api/users');\n  }\n\n\n  setCurrentUser(){\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    this.accountService.setCurrentUser(user);\n  }\n\n\n}\n","<app-nav></app-nav>\n\n<div class=\"container\" style=\"margin-top: 100px;\">\n  <app-home></app-home>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule } from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    BsDropdownModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\">Dating App</a>\n        <ul class=\"navbar-nav mr-auto\" *ngIf=\"accountService.currentUser$ | async\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\">Matches</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Lists</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"#\">Messages</a>\n            </li>\n        </ul>\n\n        <div class=\"dropdown\" *ngIf=\"accountService.currentUser$ | async\" dropdown>\n            <a class=\"dropdown-toggle text-light\" dropdownToggle>Welcome user</a>\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n                <a class=\"dropdown-item\">Edit Profile</a>\n                <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n            </div>\n        </div>\n        <form #loginForm=\"ngForm\" class=\"d-flex\" (ngSubmit)=\"login()\" autocomplete=\"off\" *ngIf=\"!(accountService.currentUser$ | async)\">\n            <input class=\"form-control mr-2\" name=\"username\" [(ngModel)]=\"model.username\" type=\"text\" placeholder=\"Username\">\n            <input class=\"form-control mr-2\" name=\"password\" type=\"password\" [(ngModel)]=\"model.password\" placeholder=\"Password\">\n            <button class=\"btn btn-outline-success\" type=\"submit\">Login</button>\n        </form>\n\n    </div>\n    <!-- <div class=\"container-fluid\">\n      \n    </div> -->\n</nav>","import { AccountService } from './../_services/account.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {}\n  @ViewChild('loginForm') loginForm: NgForm;\n  constructor(public accountService: AccountService) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  login(){\n    console.log(this.model)\n    if(this.loginForm.form.valid){\n      this.accountService.login(this.model).subscribe((res)=>{\n        console.log(res)\n      }, error => {\n        console.log(error.error);\n      });\n      \n    }   \n    \n  }\n\n  logout(){\n    this.accountService.logout();\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}